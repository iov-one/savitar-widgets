{"version":3,"sources":["App.js","index.js"],"names":["mode","configStarname","payment_type","email","email_editable","configTokens","currency","amount","amount_editable","embeddedStarname","Swap","type","embedContainerId","config","embeddedTokens","modalButtonStarname","buttonId","modalButtonTokens","modalSpanStarname","modalSpanTokens","margin","styleDiv","display","justifyContent","width","styleEmbedded","border","height","styleSpan","backgroundColor","color","App","forEach","savitar","init","style","href","target","rel","id","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIMA,EAAO,aASPC,EAAiB,CACpBC,aAAc,MACdC,MAAO,uBACPC,gBAAgB,GAGbC,EAAe,CAClBF,MAAO,qBACPC,gBAAgB,EAChBE,SAAU,MACVC,OAAQ,GACRC,iBAAiB,GAIdC,EAAmB,IAAIC,SAAa,CACvCC,KAAM,QACNC,iBAAkB,eAClBZ,KAAMA,EACNa,OAAQZ,IAELa,EAAiB,IAAIJ,SAAa,CACrCC,KAAM,QACNC,iBAAkB,aAClBZ,KAAMA,EACNa,OAAQR,IAILU,EAAsB,IAAIL,SAAa,CAC1CC,KAAM,QACNK,SAAU,kBACVhB,KAAMA,EACNa,OAAQZ,IAELgB,EAAoB,IAAIP,SAAa,CACxCC,KAAM,QACNK,SAAU,gBACVhB,KAAMA,EACNa,OAAQR,IAILa,EAAoB,IAAIR,SAAa,CACxCC,KAAM,QACNK,SAAU,gBACVhB,KAAMA,EACNa,OAAQZ,IAELkB,EAAkB,IAAIT,SAAa,CACtCC,KAAM,QACNK,SAAU,cACVhB,KAAMA,EACNa,OAAQR,IAILe,EAAS,CACZA,OAAQ,QAELC,EAAW,CACdC,QAAS,OACTC,eAAgB,gBAChBC,MAAO,QAEJC,EAAgB,CACnBC,OAAQ,gBACRC,OAAQ,MACRH,MAAO,OAEJI,EAAY,CACfF,OAAQ,kBACRG,gBAAiB,QACjBC,MAAO,SA+DKC,E,kLAxDT,CACGtB,EACAK,EACAC,EACAE,EACAC,EACAC,GACDa,SAAS,SAAAC,GAAO,OAAIA,EAAQC,Y,+BAK9B,OACG,yBAAKC,MAAOf,GACT,kDACuB,uBAAGgB,KAAK,+CAA+CC,OAAO,SAASC,IAAI,uBAA3E,YADvB,qEAIA,4DACiC,uBAAGF,KAAK,oEAAoEC,OAAO,SAASC,IAAI,uBAAhG,QADjC,KAIA,8BAAUH,MAAOf,GACd,gDACA,yBAAKe,MAAOd,GACT,4BAAQkB,GAAG,mBAAX,kBAIA,4BAAQA,GAAG,iBAAX,kBAIA,0BAAMA,GAAG,gBAAgBJ,MAAOP,GAAhC,kBAIA,0BAAMW,GAAG,cAAcJ,MAAOP,GAA9B,oBAKN,8BAAUO,MAAOf,GACd,mDACA,yBAAKe,MAAOd,GACT,yBAAKkB,GAAG,eAAeJ,MAAOV,IAE9B,yBAAKc,GAAG,aAAaJ,MAAOV,W,GAlD5Be,IAAMC,WCpFxBC,IAASC,OACN,kBAAC,IAAMC,WAAP,KACG,kBAAC,EAAD,OAEHC,SAASC,eAAgB,U","file":"static/js/main.14850650.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Swap from \"swap-sdk\";\n\n// mode\nconst mode = \"production\";\n\n/* @jloup\nAs a general rule : if you do not specify payment_type in configuration, everything is optional even delivery address.\n- Buying domain is a custom flow, you must set payment_type=iov and delivery_address\n- Buying IOVs: you can leave payment_type empty and set currency=iov\n*/\n\n// configuration for buying a starname\nconst configStarname = {\n   payment_type: \"iov\",\n   email: \"starname@example.com\",\n   email_editable: true,\n};\n// configuration for buying IOV tokens\nconst configTokens = {\n   email: \"tokens@example.com\",\n   email_editable: true,\n   currency: \"iov\",\n   amount: 10,\n   amount_editable: true,\n};\n\n// embedded widget\nconst embeddedStarname = new Swap.Widget( {\n   type: \"embed\",\n   embedContainerId: \"div-starname\",\n   mode: mode,\n   config: configStarname,\n} );\nconst embeddedTokens = new Swap.Widget( {\n   type: \"embed\",\n   embedContainerId: \"div-tokens\",\n   mode: mode,\n   config: configTokens,\n} );\n\n// modal buttons\nconst modalButtonStarname = new Swap.Widget( {\n   type: \"modal\",\n   buttonId: \"button-starname\",\n   mode: mode,\n   config: configStarname,\n} );\nconst modalButtonTokens = new Swap.Widget( {\n   type: \"modal\",\n   buttonId: \"button-tokens\",\n   mode: mode,\n   config: configTokens,\n} );\n\n// modal spans\nconst modalSpanStarname = new Swap.Widget( {\n   type: \"modal\",\n   buttonId: \"span-starname\", // use buttonId despite applyling to a span\n   mode: mode,\n   config: configStarname,\n} );\nconst modalSpanTokens = new Swap.Widget( {\n   type: \"modal\",\n   buttonId: \"span-tokens\", // use buttonId despite applyling to a span\n   mode: mode,\n   config: configTokens,\n} );\n\n// styles\nconst margin = {\n   margin: \"10px\",\n};\nconst styleDiv = {\n   display: \"flex\",\n   justifyContent: \"space-between\",\n   width: \"100%\",\n};\nconst styleEmbedded = {\n   border: \"1px solid red\",\n   height: \"67%\",\n   width: \"49%\",\n};\nconst styleSpan = {\n   border: \"1px solid black\",\n   backgroundColor: \"black\",\n   color: \"white\",\n};\n\n\nclass App extends React.Component {\n   componentDidMount() {\n      // initializations\n      [\n         embeddedStarname,\n         embeddedTokens,\n         modalButtonStarname,\n         modalButtonTokens,\n         modalSpanStarname,\n         modalSpanTokens,\n      ].forEach( savitar => savitar.init() );\n   }\n\n\n   render() {\n      return (\n         <div style={margin}>\n            <p>\n               Check out Savitar's <a href=\"https://github.com/savitar-exchange/swap-sdk\" target=\"_blank\" rel=\"noopener noreferrer\">swap-sdk</a> for more configuration options and event listener documentation.\n            </p>\n\n            <p>\n               The code for this web page is <a href=\"https://github.com/iov-one/savitar-widgets/blob/master/src/App.js\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n            </p>\n\n            <fieldset style={margin}>\n               <legend>Modal Widget</legend>\n               <div style={styleDiv}>\n                  <button id=\"button-starname\">\n                     Buy A Starname\n                  </button>\n\n                  <button id=\"button-tokens\">\n                     Buy IOV Tokens\n                  </button>\n\n                  <span id=\"span-starname\" style={styleSpan}>\n                     Buy A Starname\n                  </span>\n\n                  <span id=\"span-tokens\" style={styleSpan}>\n                     Buy IOV Tokens\n                  </span>\n               </div>\n            </fieldset>\n            <fieldset style={margin}>\n               <legend>Embedded Widget</legend>\n               <div style={styleDiv}>\n                  <div id=\"div-starname\" style={styleEmbedded} />\n\n                  <div id=\"div-tokens\" style={styleEmbedded} />\n               </div>\n            </fieldset>\n         </div>\n      );\n   }\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById( \"root\" )\n);\n"],"sourceRoot":""}